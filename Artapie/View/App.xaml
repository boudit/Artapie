<Application x:Class="View.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModelPatient="clr-namespace:ViewModel.Patient;assembly=ViewModel"
             xmlns:patient="clr-namespace:View.Patient"
             xmlns:viewModelItem="clr-namespace:ViewModel.Item;assembly=ViewModel"
             xmlns:item="clr-namespace:View.Item"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <ResourceDictionary>
                    <DataTemplate DataType="{x:Type viewModelPatient:PatientsViewModel}">
                    <patient:PatientsView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewModelPatient:PatientViewModel}">
                    <patient:PatientView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewModelItem:ItemsViewModel}">
                    <item:ItemsView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewModelItem:ItemViewModel}">
                    <item:ItemView />
                    </DataTemplate>
                </ResourceDictionary>
                
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
        
        <!--<Brush x:Key="ApplicationBackground">#252525</Brush>
        <Brush x:Key="ApplicationForeground">White</Brush>

        <Brush x:Key="ActionButtonForeground">White</Brush>
        <Brush x:Key="ActionButtonBackground">Transparent</Brush>
        <Brush x:Key="ActionButtonBackgroundLight">#30FFFFFF</Brush>
        <Brush x:Key="ActionButtonBackgroundDark">#60FFFFFF</Brush>

        <Color x:Key="ColorPatientBackground">#256525</Color>
        <Color x:Key="ColorPatientBackgroundLight">#658565</Color>
        <Color x:Key="ColorPatientBackgroundDark">#054505</Color>
        
        <Brush x:Key="PatientForeground">White</Brush>
        <SolidColorBrush x:Key="PatientBackground" Color="{StaticResource ColorPatientBackground}" />
        <SolidColorBrush x:Key="PatientBackgroundLight" Color="{StaticResource ColorPatientBackgroundLight}" />
        <SolidColorBrush x:Key="PatientBackgroundDark" Color="{StaticResource ColorPatientBackgroundDark}" />
        <system:Double x:Key="ButtonContentSize">15</system:Double>

        <Style TargetType="{x:Type Button}" x:Key="BaseButton">
            <Setter Property="FontSize" Value="{StaticResource ButtonContentSize}" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="5" />
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ActionButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource ActionButtonBackground}" />
            <Setter Property="Foreground" Value="{StaticResource ActionButtonForeground}" />
            <Setter Property="Margin" Value="2" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border Background="{TemplateBinding Background}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <ContentPresenter x:Name="ButtonContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Margin}" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ActionButtonBackgroundLight}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ActionButtonBackgroundDark}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="AddButton" BasedOn="{StaticResource ActionButton}">
            <Setter Property="Content">
                <Setter.Value>
                    <Path x:Name="PathIcon" Width="{StaticResource ButtonContentSize}" Height="{StaticResource ButtonContentSize}" Stretch="Fill" Fill="{StaticResource ActionButtonForeground}" Data="F1 M 0,7L 7,7L 7,0L 13,0L 13,7L 20,7L 20,13L 13,13L 13,20L 7,20L 7,13L 0,13L 0,7 Z "/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="PatientButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource PatientBackground}" />
            <Setter Property="Foreground" Value="{StaticResource PatientForeground}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        
                        <Border Background="{TemplateBinding Background}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            --><!--<Grid>
                                <Path x:Name="PathIcon" Width="{StaticResource ButtonContentSize}" Height="25" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="17,0,0,0" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>--><!--
                            <ContentPresenter x:Name="ButtonContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Margin}" />
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PatientBackgroundLight}" />
                                --><!--<Setter TargetName="PathIcon" Property="Fill" Value="Black" />--><!--
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource PatientBackgroundDark}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type ListBox}">
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{x:Null}" />
        </Style>-->

    </Application.Resources>
</Application>
